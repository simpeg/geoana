name: Testing With Conda
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: Testing (${{ matrix.python-version }}${{ matrix.free-threaded && 't' || '' }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11", "3.12", "3.13", "3.14"]
        free-threaded: [false, true]
        include:
          - free-threaded: true
            no_doc: true
          - python-version: "3.14"
            no_numba: true
        exclude:
          - python-version: "3.11"
            free-threaded: true
          - python-version: "3.12"
            free-threaded: true

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.13"
    
    - name: Create Conda environment file
      run: |
        python -m pip install pyyaml
        python .github/make_ci_environ.py
      env:
        PYTHON_VERSION: ${{ matrix.python-version}}
        FREE_THREADED: ${{ matrix.free-threaded && 'true' || 'false' }}
        NO_DOC_BUILD: ${{ matrix.no_doc && 'true' || 'false' }}
        NO_NUMBA: ${{ matrix.no_numba && 'true' || 'false' }}
        ENV_NAME: geoana-test


    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        environment-file: environment_ci.yml
        activate-environment: geoana-test

    - name: Conda information
      run: |
        conda info
        conda list
        conda config --show

    - name: Install Our Package
      run: |
        pip install --no-build-isolation --editable . --config-settings=setup-args="-Dwith_extensions=true"

    - name: Run Tests
      run: |
        pytest tests --cov-config=.coveragerc --cov=geoana --cov-report=xml -s -v -W ignore::DeprecationWarning ${{ matrix.NO_DOC_BUILD && ' -k "not docs"'|| ''}}

    - name: "Upload coverage to Codecov"
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
